name: Defold-builder-simple
description: Create archives using Defold's Bob the Builder. PRs to extend/improve accepted.
author: 'prismglue'
icon: 'truck'
color: 'green'
inputs:
  project_title:
    description: 'Project title (inside game.project - Bob uses game.project as part of the build output path)'
    required: true
    type: string
  defold_version:
    description: "Version of Defold to use for builds"
    required: false
    type: string
    default: '1.8.0'
  build_server:
    required: false
    description: "Custom build server"
    type: string
    default: 'https://build.defold.com'
  platform:
    type: string
    default: 'js-web'
    required: false
    description: 'Bob build platform'
  archive:
    type: boolean
    default: true
    required: false
    description: 'Archive output to GitHub'
  architectures:
    type: string
    default: 'wasm-web'
    required: false
    description: 'Bob build architectures (Swap back to js-web,wasm-web for maximum compatibility)'

runs:
  using: "composite"
  # defaults: # You might have to do this yourself...
  #   run:
  #     working-directory: ${{ inputs.GAME_DIRECTORY }}
  steps:
    - uses: actions/setup-java@v2
      with:
        java-version: '17'      # Feel free to bump this or argue for another distribution - it can't be extracted to env: for mutability reasons
        distribution: 'temurin'

    - name: Download bob.jar # Being kind to Defold by using GitHub's bandwidth (Android+iOS builder uses an S3 bucket Defold seems to maintain)
      shell: bash
      run: |
        wget -q https://github.com/defold/defold/releases/download/${{ inputs.defold_version }}/bob.jar
        java -jar bob.jar --version

    # - name: Apply extra bob flags
    #   id: bob-flags
    #   run: |
    #     FLAGS+=$([[ '${{ inputs.settings }}' ]] && echo ' --settings ${{ inputs.settings }}' || echo)
    #     echo "::set-output name=flags::$FLAGS"

    - name: Check what's going on
      shell: bash
      run: ls -lah

    - name: Resolve libraries
      shell: bash
      run: java -jar bob.jar resolve

    - name: Build
      shell: bash
      run: java -jar bob.jar --platform=${{ inputs.platform }} --architectures=${{inputs.architectures}} build --archive --build-server=${{ inputs.build_server }}

    - name: Bundle
      shell: bash
      run: java -jar bob.jar --platform=${{ inputs.platform }} --architectures=${{inputs.architectures}} ${{ steps.bob-flags.outputs.flags }} bundle
      
    - name: Show output
      shell: bash
      run: |
        ls -l build
        ls -l build/default
        ls -l build/default/${{inputs.project_title}}

    - name: Get short commit sha
      shell: bash
      id: short-commit-sha
      run: echo "::set-output name=sha::$(git rev-parse --short ${{ github.sha }})"

    - uses: actions/upload-artifact@v4
      if: '${{inputs.archive}}'
      with:
        compression-level: 9
        name: ${{ inputs.platform }}_commit_${{ steps.short-commit-sha.outputs.sha }}
        path: build/default/${{inputs.project_title}}/
